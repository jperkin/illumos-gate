#!/bin/bash
#
# Set up a cloned arm-gate branch ready for building on SmartOS
#

CONF_PKGSRCURL="https://download.joyent.com/pub/build/pkgsrc"
CONF_CLOSEDBINSURL="https://download.joyent.com/pub/build/illumos/on-closed-bins.i386.tar.bz2"
CONF_CLOSEDBINSNDURL="https://download.joyent.com/pub/build/illumos/on-closed-bins-nd.i386.tar.bz2"
CONF_SPRO12URL="https://download.joyent.com/pub/build/SunStudio.tar.bz2"
PROG_CURL="/opt/local/bin/curl"
PROG_PFEXEC="/usr/bin/pfexec"
PROG_TAR="/usr/bin/tar"

die()
{
	echo "ERROR: $*"
	exit 1
}

if [ $(${PROG_PFEXEC} id -u) -ne 0 ]; then
	die "This script requires being able to elevate privs via pfexec"
fi

#
# Install extra pkgsrc packages
#
if [[ "$(uname -v)" =~ "joyent_*" ]]; then
	for pkg in dmake sgstools rpcgen astmsgtools; do
		if ! pkg_info -qe ${pkg}; then
			echo "Fetching ${pkg}"
			${PROG_CURL} -k "${CONF_PKGSRCURL}/${pkg}.tgz" \
			    -o /var/tmp/${pkg}.tgz \
			    || die "Failed to fetch $pkg.tgz"
			echo "Installing ${pkg}"
			${PROG_PFEXEC} pkg_add -C /dev/null /var/tmp/$pkg.tgz \
			    || die "Failed to pkg_add $pkg"
			rm -f /var/tmp/$pkg.tgz
		fi
	done
fi

#
# Install closed bins
#
if [ ! -d closed ]; then
	mkdir -p closed
fi
if [ ! -f closed/on-closed-bins.i386.tar.bz2 ]; then
	echo "Fetching closed bins (debug)"
	${PROG_CURL} -ko closed/on-closed-bins.i386.tar.bz2 \
	    ${CONF_CLOSEDBINSURL} || die "Failed to fetch closed bins (debug)"
fi
if [ ! -d closed/root_i386 ]; then
	${PROG_TAR} xpjf closed/on-closed-bins.i386.tar.bz2
fi
if [ ! -f closed/on-closed-bins-nd.i386.tar.bz2 ]; then
	echo "Fetching closed bins (non-debug)"
	${PROG_CURL} -ko closed/on-closed-bins-nd.i386.tar.bz2 \
	    ${CONF_CLOSEDBINSNDURL} || die "Failed to fetch closed bins (non-debug)"
fi
if [ ! -d closed/root_i386-nd ]; then
	${PROG_TAR} xpjf closed/on-closed-bins-nd.i386.tar.bz2
fi
if [[ "$(uname -v)" =~ "joyent_*" ]]; then
	if [ ! -d /opt/sunstudio12.1 ]; then
		if [ ! -f closed/SunStudio.tar.bz2 ]; then
			echo "Fetching Sun Studio"
			${PROG_CURL} -ko closed/SunStudio.tar.bz2 \
			    ${CONF_SPRO12URL} || die "Failed to fetch Sun Studio"
		fi
		echo "Installing Sun Studio"
		${PROG_TAR} xpjf closed/SunStudio.tar.bz2 -C /opt
	fi
	if [ ! -f /opt/SUNWspro/prod/bin/cc ]; then
		ln -f -s /opt/SUNWspro /opt/SUNWspro/sunstudio12.1
	fi
fi

#
# Configure bldenv configs.
#
GATE="$(basename $(pwd -P))"
WS="$(dirname $(pwd -P))"
case "$(uname -v)" in
joyent_*)
	NATIVE_ADJUNCT="/opt/local"
	SPRO_ROOT="/opt/SUNWspro"
	i386_GCC_ROOT="$(dirname $(pwd -P))/illumos-extra-arm/proto-i86pc/usr"
	i386_GNU_ROOT="$(dirname $(pwd -P))/illumos-extra-arm/proto-i86pc/usr/gnu"
	;;
omnios-*)
	NATIVE_ADJUNCT="/usr"
	SPRO_ROOT="/opt/sunstudio12.1"
	i386_GCC_ROOT="/opt/gcc-4.4.4"
	i386_GNU_ROOT="/usr/sfw"
	;;
esac
if [ ! -f bldenv-arm.conf ]; then
	echo "Configuring bldenv-arm.conf"
	sed < bldenv.conf.in \
	    -e "s,@GATE@,${GATE},g" \
	    -e "s,@WS@,${WS},g" \
	    -e "s,@MACH@,arm,g" \
	    -e "s,@XBUILD@,,g" \
	    -e "s,@NATIVE_ADJUNCT@,${NATIVE_ADJUNCT},g" \
	    -e "s,@SPRO_ROOT@,${SPRO_ROOT},g" \
	    -e "s,@i386_GCC_ROOT@,${i386_GCC_ROOT},g" \
	    -e "s,@i386_GNU_ROOT@,${i386_GNU_ROOT},g" \
	    > bldenv-arm.conf
fi
if [ ! -f bldenv-i386.conf ]; then
	echo "Configuring bldenv-i386.conf"
	sed < bldenv.conf.in \
	    -e "s,@GATE@,${GATE},g" \
	    -e "s,@WS@,${WS},g" \
	    -e "s,@MACH@,i386,g" \
	    -e "s,@XBUILD@,#,g" \
	    -e "s,@NATIVE_ADJUNCT@,${NATIVE_ADJUNCT},g" \
	    -e "s,@SPRO_ROOT@,${SPRO_ROOT},g" \
	    -e "s,@i386_GCC_ROOT@,${i386_GCC_ROOT},g" \
	    -e "s,@i386_GNU_ROOT@,${i386_GNU_ROOT},g" \
	    > bldenv-i386.conf
fi
